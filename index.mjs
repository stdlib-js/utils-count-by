// Copyright (c) 2024 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./index.d.ts" />
import t from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-collection@v0.1.0-esm/index.mjs";import s from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-function@v0.1.1-esm/index.mjs";import e from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-has-own-property@v0.1.1-esm/index.mjs";import r from"https://cdn.jsdelivr.net/gh/stdlib-js/string-format@v0.1.1-esm/index.mjs";import i from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-plain-object@v0.1.0-esm/index.mjs";function n(t,s){return i(s)?(e(s,"thisArg")&&(t.thisArg=s.thisArg),null):new TypeError(r("invalid argument. Options argument must be an object. Value: `%s`.",s))}function o(i,o,m){var l,a,d,h,u,g,p,j;if(!t(i))throw new TypeError(r("invalid argument. First argument must be a collection. Value: `%s`.",i));if(a={},2===arguments.length)g=o;else{if(d=n(a,o))throw d;g=m}if(!s(g))throw new TypeError(r("invalid argument. Last argument must be a function. Value: `%s`.",g));for(l=a.thisArg,u=i.length,h={},j=0;j<u;j++)p=g.call(l,i[j],j),e(h,p)?h[p]+=1:h[p]=1;return h}export{o as default};
//# sourceMappingURL=index.mjs.map
